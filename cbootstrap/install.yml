- name: Install
  hosts: controlplane
  tasks:
    - name: Delete install user
      user:
        name: tmp
        state: absent

    - name: Set hosts file
      template:
        src: hosts
        dest: /etc/hosts

    - name: Configure sshd
      template:
        src: sshd_config
        dest: /etc/ssh/sshd_config
      register: sshd_config

    - name: Restart sshd
      systemd:
        name: sshd
        state: restarted
      when: sshd_config.changed

    - name: Set hostname
      copy:
        content: "{{ inventory_hostname }}.control.packetframe.com"
        dest: /etc/hostname

    - name: Add WireGuard repo
      apt_repository:
        repo: deb http://deb.debian.org/debian buster-backports main contrib non-free
        state: present

    - name: Add MongoDB apt key
      apt_key:
        url: https://www.mongodb.org/static/pgp/server-4.4.asc
        state: present

    - name: Add MongoDB repo
      apt_repository:
        repo: deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main
        state: present

    - name: Add caddy apt key
      apt_key:
        url: https://dl.cloudsmith.io/public/caddy/stable/cfg/gpg/gpg.155B6D79CA56EA34.key
        state: present

    - name: Add caddy repo
      apt_repository:
        repo: deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main
        state: present

    - name: Install system packages
      apt:
        update_cache: yes
        pkg:
          - wireguard
          - iptables-persistent
          - mongodb-org
          - git
          - python3
          - python3-pip
          - cargo
          - caddy
          - ufw

    - name: Configure WireGuard interfaces
      template:
        src: wg0.conf
        dest: "/etc/wireguard/wg0.conf"
      register: wg_config

    - name: Enable WireGuard startup
      systemd:
        name: wg-quick@wg0
        enabled: true
        state: restarted
      when: wg_config.changed

    - name: Allow SSH access from admin allowlist
      ufw:
        rule: allow
        src: "{{ item }}"
        to_port: 22
      loop: "{{ admin_allowlist }}"

    - name: Allow all access between nodes
      ufw:
        rule: allow
        src: "{{ hostvars[item].internal_ip }}"
      with_items: "{{ groups.controlplane }}"

    - name: Enable default deny UFW policy
      ufw:
        state: enabled
        policy: deny

#    - name: Copy MongoDB config
#      template:
#        src: mongod
#        dest: /etc/mongod.conf
#      register: mongo_config
#
#    - name: Apply MongoDB config
#      systemd:
#        name: mongod
#        state: restarted
#        enabled: true
#      when: mongo_config.changed
#
#    - name: Copy Caddyfile
#      template:
#        src: Caddyfile
#        dest: /etc/caddy/Caddyfile
#      register: caddy_config
#
#    - name: Apply Caddy config
#      shell: caddy reload -config /etc/caddy/Caddyfile
#      when: caddy_config.changed
#
#    - name: Clone cdnv3 repo
#      git:
#        repo: https://github.com/natesales/cdnv3
#        dest: /root/cdnv3/
#
#    - name: Configure API service
#      template:
#        src: api-service
#        dest: /lib/systemd/system/cdnv3.service
#      register: cdnv3_service
#
#    - name: Enable and start API service
#      systemd:
#        daemon_reload: true
#        name: cdnv3
#        enabled: true
#        state: restarted
#      when: cdnv3_service.changed
